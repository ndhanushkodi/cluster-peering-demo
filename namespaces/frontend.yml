---
# Service to expose frontend
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: ns1
spec:
  selector:
    app: frontend
  ports:
  - name: http
    protocol: TCP
    port: 9090
    targetPort: 9090
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: ns1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ns1
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/transparent-proxy": "false"
        "consul.hashicorp.com/connect-service-upstreams": "backend.svc.default.ns.api.peer:1234"
    spec:
      serviceAccountName: frontend
      containers:
      - name: frontend
        image: nicholasjackson/fake-service:v0.22.4
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        ports:
        - containerPort: 9090
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:9090"
        - name: "UPSTREAM_URIS"
          value: "http://localhost:1234"
        - name: "NAME"
          value: "frontend"
        - name: "MESSAGE"
          value: "Hello World"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "false"
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: frontend
#   namespace: ns1
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: frontend
# subjects:
#   - kind: ServiceAccount
#     name: frontend
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: frontend
#   namespace: ns1
# rules:
# - apiGroups:
#   - policy
#   resourceNames:
#   - frontend
#   resources:
#   - podsecuritypolicies
#   verbs:
#   - use
# ---
# apiVersion: consul.hashicorp.com/v1alpha1
# kind: ServiceDefaults
# metadata:
#   name: frontend
# spec:
#   protocol: "http"
